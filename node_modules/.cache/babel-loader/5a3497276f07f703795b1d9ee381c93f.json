{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Tom\\\\Documents\\\\GitHub\\\\tfouxman.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Tom\\\\Documents\\\\GitHub\\\\tfouxman.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\Tom\\\\Documents\\\\GitHub\\\\tfouxman.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:\\\\Users\\\\Tom\\\\Documents\\\\GitHub\\\\tfouxman.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  & {\\n    width: 30%;\\n    margin-bottom: 30px !important;\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect}from\"react\";import{NativeSelect,FormControl}from\"@material-ui/core\";import styled from\"styled-components\";import{fetchCountries}from\"./api\";var Styles=styled.div(_templateObject());var CountryPicker=function CountryPicker(_ref){var onCountryChange=_ref.onCountryChange;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),fetchedCountries=_useState2[0],setFetchedCountries=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setFetchedCountries;_context.next=3;return fetchCountries();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();fetchAPI();},[setFetchedCountries]);return/*#__PURE__*/React.createElement(Styles,null,/*#__PURE__*/React.createElement(FormControl,null,/*#__PURE__*/React.createElement(NativeSelect,{defaultValue:\"\",onChange:function onChange(e){return onCountryChange(e.target.value);}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Global\"),fetchedCountries.map(function(country,i){return/*#__PURE__*/React.createElement(\"option\",{key:i,value:country},country);}))));};export default CountryPicker;","map":{"version":3,"sources":["C:/Users/Tom/Documents/GitHub/tfouxman.github.io/src/components/Covid/countryPicker.jsx"],"names":["React","useState","useEffect","NativeSelect","FormControl","styled","fetchCountries","Styles","div","CountryPicker","onCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","e","target","value","map","country","i"],"mappings":"45BAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,YAAT,CAAuBC,WAAvB,KAA0C,mBAA1C,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,OAASC,cAAT,KAA+B,OAA/B,CAEA,GAAMC,CAAAA,MAAM,CAAGF,MAAM,CAACG,GAAV,mBAAZ,CAOA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAyB,IAAtBC,CAAAA,eAAsB,MAAtBA,eAAsB,eACGT,QAAQ,CAAC,EAAD,CADX,wCACtCU,gBADsC,eACpBC,mBADoB,eAG7CV,SAAS,CAAC,UAAM,CACd,GAAMW,CAAAA,QAAQ,2FAAG,+IACfD,mBADe,uBACWN,CAAAA,cAAc,EADzB,qHAAH,kBAARO,CAAAA,QAAQ,2CAAd,CAIAA,QAAQ,GACT,CANQ,CAMN,CAACD,mBAAD,CANM,CAAT,CAQA,mBACE,oBAAC,MAAD,mBACE,oBAAC,WAAD,mBACE,oBAAC,YAAD,EACE,YAAY,CAAC,EADf,CAEE,QAAQ,CAAE,kBAACE,CAAD,QAAOJ,CAAAA,eAAe,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtB,EAFZ,eAIE,8BAAQ,KAAK,CAAC,EAAd,WAJF,CAKGL,gBAAgB,CAACM,GAAjB,CAAqB,SAACC,OAAD,CAAUC,CAAV,qBACpB,8BAAQ,GAAG,CAAEA,CAAb,CAAgB,KAAK,CAAED,OAAvB,EACGA,OADH,CADoB,EAArB,CALH,CADF,CADF,CADF,CAiBD,CA5BD,CA8BA,cAAeT,CAAAA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { fetchCountries } from \"./api\";\r\n\r\nconst Styles = styled.div`\r\n  & {\r\n    width: 30%;\r\n    margin-bottom: 30px !important;\r\n  }\r\n`;\r\n\r\nconst CountryPicker = ({ onCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <Styles>\r\n      <FormControl>\r\n        <NativeSelect\r\n          defaultValue=\"\"\r\n          onChange={(e) => onCountryChange(e.target.value)}\r\n        >\r\n          <option value=\"\">Global</option>\r\n          {fetchedCountries.map((country, i) => (\r\n            <option key={i} value={country}>\r\n              {country}\r\n            </option>\r\n          ))}\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </Styles>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n"]},"metadata":{},"sourceType":"module"}