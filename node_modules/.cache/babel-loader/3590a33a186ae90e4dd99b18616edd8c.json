{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nrequire(\"./declarations/UnityLoader\");\n\nrequire(\"./declarations/UnityInstance\");\n\nrequire(\"./declarations/ReactUnityWebgl\");\n\nvar LoggingService_1 = require(\"./services/LoggingService\");\n\nvar UnityContent =\n/** @class */\nfunction () {\n  /**\n   * Creates a new Unity content object. This object can be used\n   * @param {string} buildJsonPath the relative path to the build json file generated by Unity.\n   * @param {string} unityLoaderJsPath the relative path to the unity loader javascript file.\n   * @param {IUnityConfig} unityConfig the Unity configuration that will be used to start the player.\n   */\n  function UnityContent(buildJsonPath, unityLoaderJsPath, unityConfig) {\n    var _unityConfig = unityConfig || {};\n\n    this.buildJsonPath = buildJsonPath;\n    this.unityLoaderJsPath = unityLoaderJsPath;\n    this.uniqueID = ++UnityContent.uniqueID;\n    this.unityEvents = [];\n    this.unityConfig = {\n      modules: _unityConfig.modules || {},\n      unityVersion: _unityConfig.unityVersion || \"undefined\",\n      adjustOnWindowResize: _unityConfig.adjustOnWindowResize,\n      id: _unityConfig.id || \"nill\"\n    };\n    if (typeof window.ReactUnityWebGL === \"undefined\") window.ReactUnityWebGL = {};\n  }\n  /**\n   * Binds a unity component to this content.\n   * @param unityComponentInstance the unity component that will be binded to this content.\n   * @public\n   */\n\n\n  UnityContent.prototype.setComponentInstance = function (unityComponentInstance) {\n    this.unityComponent = unityComponentInstance;\n  };\n  /**\n   * Binds a unity player to this content.\n   * @param unityPlayerInstance the unity component that will be binded to this content.\n   * @public\n   */\n\n\n  UnityContent.prototype.setUnityInstance = function (unityInstance) {\n    this.unityInstance = unityInstance;\n  };\n  /**\n   * Sets the unity players fullscreen mode.\n   * @param {boolean} fullscreen\n   * @public\n   */\n\n\n  UnityContent.prototype.setFullscreen = function (fullscreen) {\n    if (this.unityInstance != null) {\n      this.unityInstance.SetFullscreen(fullscreen === true ? 1 : 0);\n    }\n  };\n  /**\n   * Quits the Unity Instance and removes it from memory.\n   */\n\n\n  UnityContent.prototype.remove = function () {\n    var _this = this;\n\n    if (typeof this.unityInstance !== \"undefined\" && typeof this.unityInstance.Quit === \"function\") return this.unityInstance.Quit(function () {\n      _this.triggerUnityEvent(\"quitted\");\n\n      _this.unityInstance = undefined;\n    });\n    return LoggingService_1.loggingService.warnUnityContentRemoveNotAvailable();\n  };\n  /**\n   * Sends an event to the Unity player that will trigger a function.\n   * @param {string} gameObjectName the name of the game object in your Unity scene.\n   * @param {string} methodName the name of the public method on the game object.\n   * @param {any} parameter an optional parameter to pass along to the method.\n   * @public\n   */\n\n\n  UnityContent.prototype.send = function (gameObjectName, methodName, parameter) {\n    if (this.unityInstance != null) {\n      if (typeof parameter === \"undefined\") {\n        this.unityInstance.SendMessage(gameObjectName, methodName);\n      } else {\n        this.unityInstance.SendMessage(gameObjectName, methodName, parameter);\n      }\n    }\n  };\n  /**\n   * Registers an event listener for the Unity player. These can be\n   * system events like when the player is initialized or loader and\n   * your custom events from Unity.\n   * @param {string} eventName the event name\n   * @param {Function} eventCallback the event function\n   * @returns {any} The Function\n   * @public\n   */\n\n\n  UnityContent.prototype.on = function (eventName, eventCallback) {\n    this.unityEvents.push({\n      eventName: eventName,\n      eventCallback: eventCallback\n    });\n\n    window.ReactUnityWebGL[eventName] = function (parameter) {\n      return eventCallback(parameter);\n    };\n  };\n  /**\n   * Triggers an event that has been registered by the on\n   * function.\n   * @param {string} eventName the event name\n   * @param {Function} eventValue the event value\n   * @public\n   */\n\n\n  UnityContent.prototype.triggerUnityEvent = function (eventName, eventValue) {\n    for (var _i = 0; _i < this.unityEvents.length; _i++) if (this.unityEvents[_i].eventName === eventName) this.unityEvents[_i].eventCallback(eventValue);\n  };\n  /**\n   * the statis unique ID keeps track of the\n   * unique ID's made by other instances.\n   * @type {number}\n   * @static\n   * @public\n   */\n\n\n  UnityContent.uniqueID = 0;\n  return UnityContent;\n}();\n\nexports.default = UnityContent;","map":{"version":3,"sources":["../source/UnityContent.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"./declarations/UnityLoader\");\nrequire(\"./declarations/UnityInstance\");\nrequire(\"./declarations/ReactUnityWebgl\");\nvar LoggingService_1 = require(\"./services/LoggingService\");\nvar UnityContent = /** @class */ (function () {\n    /**\n     * Creates a new Unity content object. This object can be used\n     * @param {string} buildJsonPath the relative path to the build json file generated by Unity.\n     * @param {string} unityLoaderJsPath the relative path to the unity loader javascript file.\n     * @param {IUnityConfig} unityConfig the Unity configuration that will be used to start the player.\n     */\n    function UnityContent(buildJsonPath, unityLoaderJsPath, unityConfig) {\n        var _unityConfig = unityConfig || {};\n        this.buildJsonPath = buildJsonPath;\n        this.unityLoaderJsPath = unityLoaderJsPath;\n        this.uniqueID = ++UnityContent.uniqueID;\n        this.unityEvents = [];\n        this.unityConfig = {\n            modules: _unityConfig.modules || {},\n            unityVersion: _unityConfig.unityVersion || \"undefined\",\n            adjustOnWindowResize: _unityConfig.adjustOnWindowResize,\n            id: _unityConfig.id || \"nill\"\n        };\n        if (typeof window.ReactUnityWebGL === \"undefined\")\n            window.ReactUnityWebGL = {};\n    }\n    /**\n     * Binds a unity component to this content.\n     * @param unityComponentInstance the unity component that will be binded to this content.\n     * @public\n     */\n    UnityContent.prototype.setComponentInstance = function (unityComponentInstance) {\n        this.unityComponent = unityComponentInstance;\n    };\n    /**\n     * Binds a unity player to this content.\n     * @param unityPlayerInstance the unity component that will be binded to this content.\n     * @public\n     */\n    UnityContent.prototype.setUnityInstance = function (unityInstance) {\n        this.unityInstance = unityInstance;\n    };\n    /**\n     * Sets the unity players fullscreen mode.\n     * @param {boolean} fullscreen\n     * @public\n     */\n    UnityContent.prototype.setFullscreen = function (fullscreen) {\n        if (this.unityInstance != null) {\n            this.unityInstance.SetFullscreen(fullscreen === true ? 1 : 0);\n        }\n    };\n    /**\n     * Quits the Unity Instance and removes it from memory.\n     */\n    UnityContent.prototype.remove = function () {\n        var _this = this;\n        if (typeof this.unityInstance !== \"undefined\" &&\n            typeof this.unityInstance.Quit === \"function\")\n            return this.unityInstance.Quit(function () {\n                _this.triggerUnityEvent(\"quitted\");\n                _this.unityInstance = undefined;\n            });\n        return LoggingService_1.loggingService.warnUnityContentRemoveNotAvailable();\n    };\n    /**\n     * Sends an event to the Unity player that will trigger a function.\n     * @param {string} gameObjectName the name of the game object in your Unity scene.\n     * @param {string} methodName the name of the public method on the game object.\n     * @param {any} parameter an optional parameter to pass along to the method.\n     * @public\n     */\n    UnityContent.prototype.send = function (gameObjectName, methodName, parameter) {\n        if (this.unityInstance != null) {\n            if (typeof parameter === \"undefined\") {\n                this.unityInstance.SendMessage(gameObjectName, methodName);\n            }\n            else {\n                this.unityInstance.SendMessage(gameObjectName, methodName, parameter);\n            }\n        }\n    };\n    /**\n     * Registers an event listener for the Unity player. These can be\n     * system events like when the player is initialized or loader and\n     * your custom events from Unity.\n     * @param {string} eventName the event name\n     * @param {Function} eventCallback the event function\n     * @returns {any} The Function\n     * @public\n     */\n    UnityContent.prototype.on = function (eventName, eventCallback) {\n        this.unityEvents.push({\n            eventName: eventName,\n            eventCallback: eventCallback\n        });\n        window.ReactUnityWebGL[eventName] = function (parameter) {\n            return eventCallback(parameter);\n        };\n    };\n    /**\n     * Triggers an event that has been registered by the on\n     * function.\n     * @param {string} eventName the event name\n     * @param {Function} eventValue the event value\n     * @public\n     */\n    UnityContent.prototype.triggerUnityEvent = function (eventName, eventValue) {\n        for (var _i = 0; _i < this.unityEvents.length; _i++)\n            if (this.unityEvents[_i].eventName === eventName)\n                this.unityEvents[_i].eventCallback(eventValue);\n    };\n    /**\n     * the statis unique ID keeps track of the\n     * unique ID's made by other instances.\n     * @type {number}\n     * @static\n     * @public\n     */\n    UnityContent.uniqueID = 0;\n    return UnityContent;\n}());\nexports.default = UnityContent;\n//# sourceMappingURL=UnityContent.js.map"]},"metadata":{},"sourceType":"script"}