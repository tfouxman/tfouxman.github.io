{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar LoggingService_1 = require(\"./LoggingService\");\n\nvar UnityLoaderService =\n/** @class */\nfunction () {\n  function UnityLoaderService() {\n    /**\n     * Reference to the document head.\n     * @type {HTMLHeadElement}\n     * @private\n     */\n    this.documentHead = document.getElementsByTagName(\"head\")[0];\n  }\n  /**\n   * Appends the Unity loader script to the window. When it's loaded a callback will\n   * be triggered. NOTE: This can't be a promisse due to JavaScript compatibilty.\n   * @param {string} source the path to the Unity loader file\n   * @param {Function} onLoad when the script is loaded\n   * @public\n   */\n\n\n  UnityLoaderService.prototype.append = function (source, onLoad) {\n    var _this = this;\n\n    if (typeof this.unityLoaderScript !== \"undefined\") if (source === this.unityLoaderScript.src) {\n      return onLoad();\n    } else {\n      this.unityLoaderScript.remove();\n    }\n    window.fetch(source).then(function (_response) {\n      if (_response.status >= 400) return LoggingService_1.loggingService.errorUnityLoaderNotFound(_response.status);\n\n      _response.text().then(function (_text) {\n        if (_text.trim().charAt(0) === \"<\") return LoggingService_1.loggingService.errorUnityLoaderNotFound(\"error doc\");\n        _this.unityLoaderScript = document.createElement(\"script\");\n        _this.unityLoaderScript.type = \"text/javascript\";\n        _this.unityLoaderScript.async = true;\n        _this.unityLoaderScript.src = source;\n\n        _this.unityLoaderScript.onload = function () {\n          if (typeof window.UnityLoader === \"undefined\") return LoggingService_1.loggingService.errorUnityLoaderNotFound();\n          onLoad();\n        };\n\n        _this.documentHead.appendChild(_this.unityLoaderScript);\n      }).catch(function (_reason) {\n        return LoggingService_1.loggingService.errorUnityLoaderNotFound(_reason);\n      });\n    }).catch(function (_reason) {\n      return LoggingService_1.loggingService.errorUnityLoaderNotFound(_reason);\n    });\n  };\n\n  return UnityLoaderService;\n}();\n\nexports.default = UnityLoaderService;","map":{"version":3,"sources":["../../source/services/UnityLoaderService.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,gBAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AAEA,IAAA,kBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,kBAAA,GAAA;AACE;;;;;AAKQ,SAAA,YAAA,GAAgC,QAAQ,CAAC,oBAAT,CACtC,MADsC,EAEtC,CAFsC,CAAhC;AAkDT;AAvCC;;;;;;;;;AAOO,EAAA,kBAAA,CAAA,SAAA,CAAA,MAAA,GAAP,UAAc,MAAd,EAA8B,MAA9B,EAA8C;AAA9C,QAAA,KAAA,GAAA,IAAA;;AACE,QAAI,OAAO,KAAK,iBAAZ,KAAkC,WAAtC,EACE,IAAI,MAAM,KAAK,KAAK,iBAAL,CAAuB,GAAtC,EAA2C;AACzC,aAAO,MAAM,EAAb;AACD,KAFD,MAEO;AACL,WAAK,iBAAL,CAAuB,MAAvB;AACD;AACH,IAAA,MAAM,CACH,KADH,CACS,MADT,EAEG,IAFH,CAEQ,UAAA,SAAA,EAAS;AACb,UAAI,SAAS,CAAC,MAAV,IAAoB,GAAxB,EACE,OAAO,gBAAA,CAAA,cAAA,CAAe,wBAAf,CAAwC,SAAS,CAAC,MAAlD,CAAP;;AACF,MAAA,SAAS,CACN,IADH,GAEG,IAFH,CAEQ,UAAA,KAAA,EAAK;AACT,YAAI,KAAK,CAAC,IAAN,GAAa,MAAb,CAAoB,CAApB,MAA2B,GAA/B,EACE,OAAO,gBAAA,CAAA,cAAA,CAAe,wBAAf,CAAwC,WAAxC,CAAP;AACF,QAAA,KAAI,CAAC,iBAAL,GAAyB,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAzB;AACA,QAAA,KAAI,CAAC,iBAAL,CAAuB,IAAvB,GAA8B,iBAA9B;AACA,QAAA,KAAI,CAAC,iBAAL,CAAuB,KAAvB,GAA+B,IAA/B;AACA,QAAA,KAAI,CAAC,iBAAL,CAAuB,GAAvB,GAA6B,MAA7B;;AACA,QAAA,KAAI,CAAC,iBAAL,CAAuB,MAAvB,GAAgC,YAAA;AAC9B,cAAI,OAAQ,MAAc,CAAC,WAAvB,KAAuC,WAA3C,EACE,OAAO,gBAAA,CAAA,cAAA,CAAe,wBAAf,EAAP;AACF,UAAA,MAAM;AACP,SAJD;;AAKA,QAAA,KAAI,CAAC,YAAL,CAAkB,WAAlB,CAA8B,KAAI,CAAC,iBAAnC;AACD,OAfH,EAgBG,KAhBH,CAgBS,UAAA,OAAA,EAAO;AAAI,eAAA,gBAAA,CAAA,cAAA,CAAe,wBAAf,CAAA,OAAA,CAAA;AAAgD,OAhBpE;AAiBD,KAtBH,EAuBG,KAvBH,CAuBS,UAAA,OAAA,EAAO;AAAI,aAAA,gBAAA,CAAA,cAAA,CAAe,wBAAf,CAAA,OAAA,CAAA;AAAgD,KAvBpE;AAwBD,GA/BM;;AAgCT,SAAA,kBAAA;AAAC,CAxDD,EAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LoggingService_1 = require(\"./LoggingService\");\nvar UnityLoaderService = /** @class */ (function () {\n    function UnityLoaderService() {\n        /**\n         * Reference to the document head.\n         * @type {HTMLHeadElement}\n         * @private\n         */\n        this.documentHead = document.getElementsByTagName(\"head\")[0];\n    }\n    /**\n     * Appends the Unity loader script to the window. When it's loaded a callback will\n     * be triggered. NOTE: This can't be a promisse due to JavaScript compatibilty.\n     * @param {string} source the path to the Unity loader file\n     * @param {Function} onLoad when the script is loaded\n     * @public\n     */\n    UnityLoaderService.prototype.append = function (source, onLoad) {\n        var _this = this;\n        if (typeof this.unityLoaderScript !== \"undefined\")\n            if (source === this.unityLoaderScript.src) {\n                return onLoad();\n            }\n            else {\n                this.unityLoaderScript.remove();\n            }\n        window\n            .fetch(source)\n            .then(function (_response) {\n            if (_response.status >= 400)\n                return LoggingService_1.loggingService.errorUnityLoaderNotFound(_response.status);\n            _response\n                .text()\n                .then(function (_text) {\n                if (_text.trim().charAt(0) === \"<\")\n                    return LoggingService_1.loggingService.errorUnityLoaderNotFound(\"error doc\");\n                _this.unityLoaderScript = document.createElement(\"script\");\n                _this.unityLoaderScript.type = \"text/javascript\";\n                _this.unityLoaderScript.async = true;\n                _this.unityLoaderScript.src = source;\n                _this.unityLoaderScript.onload = function () {\n                    if (typeof window.UnityLoader === \"undefined\")\n                        return LoggingService_1.loggingService.errorUnityLoaderNotFound();\n                    onLoad();\n                };\n                _this.documentHead.appendChild(_this.unityLoaderScript);\n            })\n                .catch(function (_reason) { return LoggingService_1.loggingService.errorUnityLoaderNotFound(_reason); });\n        })\n            .catch(function (_reason) { return LoggingService_1.loggingService.errorUnityLoaderNotFound(_reason); });\n    };\n    return UnityLoaderService;\n}());\nexports.default = UnityLoaderService;\n//# sourceMappingURL=UnityLoaderService.js.map"]},"metadata":{},"sourceType":"script"}