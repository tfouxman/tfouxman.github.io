{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tom\\\\Documents\\\\GitHub\\\\tfouxman.github.io\\\\src\\\\components\\\\Covid\\\\countryPicker.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { fetchCountries } from \"./api\";\nconst Styles = styled.div`\n  & {\n    width: 30%;\n    margin-bottom: 30px !important;\n  }\n`;\n\nconst CountryPicker = ({\n  onCountryChange\n}) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, [setFetchedCountries]);\n  return /*#__PURE__*/React.createElement(Styles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NativeSelect, {\n    defaultValue: \"\",\n    onChange: e => onCountryChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Global\"), fetchedCountries.map((country, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    value: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, country)))));\n};\n\nexport default CountryPicker;","map":{"version":3,"sources":["C:/Users/Tom/Documents/GitHub/tfouxman.github.io/src/components/Covid/countryPicker.jsx"],"names":["React","useState","useEffect","NativeSelect","FormControl","styled","fetchCountries","Styles","div","CountryPicker","onCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","e","target","value","map","country","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,mBAA1C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,cAAT,QAA+B,OAA/B;AAEA,MAAMC,MAAM,GAAGF,MAAM,CAACG,GAAI;;;;;CAA1B;;AAOA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AAC7C,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,EAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,QAAQ,GAAG,YAAY;AAC3BD,MAAAA,mBAAmB,CAAC,MAAMN,cAAc,EAArB,CAAnB;AACD,KAFD;;AAIAO,IAAAA,QAAQ;AACT,GANQ,EAMN,CAACD,mBAAD,CANM,CAAT;AAQA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,YAAY,EAAC,EADf;AAEE,IAAA,QAAQ,EAAGE,CAAD,IAAOJ,eAAe,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAKGL,gBAAgB,CAACM,GAAjB,CAAqB,CAACC,OAAD,EAAUC,CAAV,kBACpB;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,KAAK,EAAED,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,CADD,CALH,CADF,CADF,CADF;AAiBD,CA5BD;;AA8BA,eAAeT,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { fetchCountries } from \"./api\";\r\n\r\nconst Styles = styled.div`\r\n  & {\r\n    width: 30%;\r\n    margin-bottom: 30px !important;\r\n  }\r\n`;\r\n\r\nconst CountryPicker = ({ onCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <Styles>\r\n      <FormControl>\r\n        <NativeSelect\r\n          defaultValue=\"\"\r\n          onChange={(e) => onCountryChange(e.target.value)}\r\n        >\r\n          <option value=\"\">Global</option>\r\n          {fetchedCountries.map((country, i) => (\r\n            <option key={i} value={country}>\r\n              {country}\r\n            </option>\r\n          ))}\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </Styles>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n"]},"metadata":{},"sourceType":"module"}